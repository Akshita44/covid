{"ast":null,"code":"import _toConsumableArray from \"D:/React_JS/Practice/covid/copractice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"D:\\\\React_JS\\\\Practice\\\\covid\\\\copractice\\\\src\\\\util.js\",\n    _this = this;\n\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\"; // Circle\n// color create\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000\n  }\n}; //changing value data into ascending order \n\nexport var sortData = function sortData(data) {\n  var sortedData = _toConsumableArray(data);\n\n  sortedData.sort(function (a, b) {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\nexport var prettyPrintStat = function prettyPrintStat(stat) {\n  return stat ? \"+\".concat(numeral(stat).format(\"0.0a\")) : \"+0\";\n};\nexport var showDataOnMap = function showDataOnMap(data) {\n  var casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"cases\";\n  return data.map(function (country) {\n    return /*#__PURE__*/_jsxDEV(Circle // Lat lon calculate circle \n    , {\n      center: [country.countryInfo.lat, country.countryInfo.long],\n      color: casesTypeColors[casesType].hex,\n      fillColor: casesTypeColors[casesType].hex,\n      fillOpacity: 0.4,\n      radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      /*\n      It will create proper circle as per caese \n       Math.sqrt (Explaination)\n      https://www.w3schools.com/jsref/jsref_sqrt.asp\n      */\n      ,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-flag\",\n            style: {\n              backgroundImage: \"url(\".concat(country.countryInfo.flag, \")\")\n            } //We can use color aswell \n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-name\",\n            children: country.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-confirmed\",\n            children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-recovered\",\n            children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-deaths\",\n            children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, _this);\n  });\n};","map":{"version":3,"sources":["D:/React_JS/Practice/covid/copractice/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B,C,CACA;AAEA;;;AACA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,SADA;AAELC,IAAAA,GAAG,EAAE,kBAFA;AAGLC,IAAAA,OAAO,EAAE,wBAHJ;AAILC,IAAAA,UAAU,EAAE;AAJP,GADe;AAOtBC,EAAAA,SAAS,EAAE;AACTJ,IAAAA,GAAG,EAAE,SADI;AAETC,IAAAA,GAAG,EAAE,mBAFI;AAGTC,IAAAA,OAAO,EAAE,yBAHA;AAITC,IAAAA,UAAU,EAAE;AAJH,GAPW;AAatBE,EAAAA,MAAM,EAAE;AACNL,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,GAAG,EAAE,kBAFC;AAGNC,IAAAA,OAAO,EAAE,wBAHH;AAINC,IAAAA,UAAU,EAAE;AAJN;AAbc,CAAxB,C,CAqBA;;AACA,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AAChC,MAAIC,UAAU,sBAAOD,IAAP,CAAd;;AACAC,EAAAA,UAAU,CAACC,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxB,QAAID,CAAC,CAACX,KAAF,GAAUY,CAAC,CAACZ,KAAhB,EAAuB;AACrB,aAAO,CAAC,CAAR;AACD,KAFD,MAEO;AACL,aAAO,CAAP;AACD;AACF,GAND;AAOA,SAAOS,UAAP;AACD,CAVM;AAYP,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD;AAAA,SAC7BA,IAAI,cAAOlB,OAAO,CAACkB,IAAD,CAAP,CAAcC,MAAd,CAAqB,MAArB,CAAP,IAAwC,IADf;AAAA,CAAxB;AAGP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACR,IAAD;AAAA,MAAOS,SAAP,uEAAmB,OAAnB;AAAA,SAC3BT,IAAI,CAACU,GAAL,CAAS,UAACC,OAAD;AAAA,wBACP,QAAC,MAAD,CACA;AADA;AAEE,MAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CAFV;AAGE,MAAA,KAAK,EAAEvB,eAAe,CAACkB,SAAD,CAAf,CAA2BhB,GAHpC;AAIE,MAAA,SAAS,EAAEF,eAAe,CAACkB,SAAD,CAAf,CAA2BhB,GAJxC;AAKE,MAAA,WAAW,EAAE,GALf;AAME,MAAA,MAAM,EACJsB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgClB,eAAe,CAACkB,SAAD,CAAf,CAA2Bb;AAC3D;AACR;AACA;AACA;AACA;AAZI;AAAA,6BAeE,QAAC,KAAD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,KAAK,EAAE;AAAEqB,cAAAA,eAAe,gBAASN,OAAO,CAACC,WAAR,CAAoBM,IAA7B;AAAjB,aAFT,CAEkE;;AAFlE;AAAA;AAAA;AAAA;AAAA,mBADF,eAKE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,sBAA4BP,OAAO,CAACA;AAApC;AAAA;AAAA;AAAA;AAAA,mBALF,eAME;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,kCACUvB,OAAO,CAACuB,OAAO,CAACnB,KAAT,CAAP,CAAuBe,MAAvB,CAA8B,KAA9B,CADV;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,eASE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,sCACcnB,OAAO,CAACuB,OAAO,CAACd,SAAT,CAAP,CAA2BU,MAA3B,CAAkC,KAAlC,CADd;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,eAYE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACWnB,OAAO,CAACuB,OAAO,CAACb,MAAT,CAAP,CAAwBS,MAAxB,CAA+B,KAA/B,CADX;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,aADO;AAAA,GAAT,CAD2B;AAAA,CAAtB","sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n// Circle\n\n// color create\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000,\n  },\n};\n\n//changing value data into ascending order \nexport const sortData = (data) => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showDataOnMap = (data, casesType = \"cases\") =>\n  data.map((country) => (\n    <Circle\n    // Lat lon calculate circle \n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      fillOpacity={0.4}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n        /*\n        It will create proper circle as per caese \n         Math.sqrt (Explaination)\n        https://www.w3schools.com/jsref/jsref_sqrt.asp\n        */\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }} //We can use color aswell \n          ></div>\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  ));\n"]},"metadata":{},"sourceType":"module"}